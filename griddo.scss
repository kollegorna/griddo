////
// Set variables unless they aren't already assigned
////
$griddo-dir: ltr !default;
$griddo-float: left !default;
$griddo-float-opposite: right !default; // @todo: Need this?
$griddo-gutter: 20px !default;
$griddo-columns: 12 !default;
$griddo-row-width: 1200px !default;

////
// Intializes a row.
////
@mixin griddo-row($behaviour: false) {
  @include box-sizing(border-box);
  @include clearfix;
  @include griddo-dir;

  list-style: none;
  padding: 0;

  @if $behavior == nest {
    margin: 0 (-($griddo-gutter/2));
    max-width: none;
    width: auto;
  }
  @else if $behavior == collapse {
    width: 100%;
    margin: 0;
    max-width: $griddo-row-width;
  }
  @else if $behavior == nest-collapse {
    width: auto;
    margin: 0;
    max-width: none;
  }
  @else {
    margin: 0 auto;
    max-width: $griddo-row-width;
    width: 100%;
  }
}

////
// Render a column.
// A column is always relative to the number of total columns.
////
@mixin griddo-col($dividend, $divisor: $griddo-columns) {
  @include griddo-col-setup;
  @include griddo-width($dividend, $divisor);
}

////
// Center a column or item.
////
@mixin griddo-centered {
  float: none;
  margin: 0 auto;
}

////
// @todo: Do we need this?
////
@mixin griddo-last {
  float: $griddo-float;
}

////
// Offset a column or item.
////
@mixin griddo-offset($dividend: 1, $divisor: $griddo-columns) {
  margin-left: griddo-calc($dividend, $divisor);
}

////
// Push a column or item.
////
@mixin griddo-push($dividend: 1, $divisor: $griddo-columns) {
  left: griddo-calc($dividend, $divisor);
}

////
// Pull a column or item.
////
@mixin griddo-pull($dividend: 1, $divisor: $griddo-columns) {
  right: griddo-calc($dividend, $divisor);
}

////
// Direction setup.
////
@mixin griddo-dir {
  direction: $griddo-dir;
  @if $griddo-dir == ltr {
    text-align: left;
  } else {
    text-align: right;
  }
}

////
// Column setup (column or item).
////
@mixin griddo-col-setup {
  float: $griddo-float;
  list-style: none;
  margin: 0;
  min-height: 1px;
  padding: 0 ($griddo-gutter/2);
  position: relative;
}

////
// Return calculated width.
////
@mixin griddo-width($dividend, $divisor: $griddo-columns) {
  width: griddo-calc($dividend, $divisor);
}

////
// Utility function to use on a container that doesn't contain any columns or
// items.
////
@mixin griddo-wrapper($behaviour: false) {
  @include griddo-row($behaviour);
  padding: 0 ($griddo-gutter/2);
}

////
// Calculate percentage.
////
@function griddo-calc($dividend, $divisor) {
  @return percentage(($dividend/$divisor));
}
